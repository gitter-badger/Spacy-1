#error Documentation only.

/**
 * @defgroup VHatGroup VHat
 */

/**
 * @defgroup VectorSpaceGroup Vector Spaces
 *
 * @brief Collection of available vector spaces.
 *
 * Contains models for one-dimensional and product spaces as well as vector spaces for FEnics and Kaskade 7.
 */

  /**
    * @defgroup RealGroup Real Space
    * @ingroup VectorSpaceGroup
    * @brief A one-dimensional vector space.
    */

  /**
    * @defgroup ProductSpaceGroup Product Space
    * @ingroup VectorSpaceGroup
    * @brief A product space that supports distinction between primal and dual variables.
    */

  /**
    * @defgroup FenicsGroup Vector Space for FEniCS
    * @ingroup VectorSpaceGroup
    * @brief Vector spaces, functionals and operators for FEniCS.
    */

    
  /**
    * @defgroup KaskadeGroup Vector Space for Kaskade 7
    * @ingroup VectorSpaceGroup
    * @brief Vector spaces, functionals and operators for Kaskade 7.
    */
     
/**
 * @defgroup MixinGroup Mixins
 * @brief Components that are frequently used and can be added to your classes via (multiple) inheritance.
 */

/**
 * @defgroup ExceptionGroup Exceptions
 * @brief Some simple exceptions.
 * @todo improve
 */

/**
 * @defgroup AlgorithmGroup Algorithms
 * @brief Contains different algorithms that can be formulated in vector spaces.
 * @see NewtonGroup, CGGroup, CSGroup
 *
 * Contains different variants of conjugate gradient methods for convex and nonconvex problems, different newton methods and an affine covariant composite step method.
 */
 
  /**
   * @defgroup NewtonGroup Newton Methods
   * @ingroup AlgorithmGroup
   * @brief Newton methods, largely following P. Deuflhard: Newton Methods for Nonlinear Problems.
   */
 
  /**
   * @defgroup CGGroup Conjugate Gradient Methods
   * @ingroup AlgorithmGroup
   * @brief Conjugate gradient methods for convex and nonconvex problems (CG, Truncated CG, Regularized CG and Truncated Regularized CG).
   */ 

  /**
   * @defgroup CSGroup Composite Step Methods
   * @ingroup AlgorithmGroup
   * @brief Currently only contains the affine covariant composite step method of \cite Lubkoll2015, \cite Lubkoll2015a.
   */ 
  
/**
 * @defgroup ConceptGroup Concepts
 * @brief Concepts for vectors, functional, operators, ...
 * 
 * The concepts are employed with Boost.TypeErasure, i.e. VectorConcept yields the type boost::type_erasure::any<VectorConcept>.
 */
 
  /**
   * @defgroup NewtonConceptGroup Concepts for Newton's method
   * @ingroup ConceptGroup
   * @brief Concepts for damping strategy and termination criteria for Newton's method.
   */
   
  /**
   * @defgroup CGConceptGroup Concepts for conjugate gradient methods
   * @ingroup ConceptGroup
   * @brief Concept for termination criteria for conjugate gradient methods.
   */

  /**
   * \namespace VHat
   * \brief Main namespace of the %VHat library.
   */
 
