language: c++

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    - llvm-toolchain-precise-3.6
    - llvm-toolchain-precise-3.7
    - llvm-toolchain-precise-3.8
    packages:
    - build-essential
    - g++-5
    - gcc-5
    - g++-6
    - gcc-6
    - clang-3.6
    - clang-3.7
    - clang-3.8

env:
  # Workaround for https://github.com/travis-ci/travis-ci/issues/4681
  matrix:
    - TRAVIS_EMPTY_JOB_WORKAROUND=true
  
matrix:
  exclude:
    - env: TRAVIS_EMPTY_JOB_WORKAROUND=true
  include:
    # LINUX
    # GCC 5
    - os: linux
      env: COMPILER=g++-5 COMPUTE_COVERAGE=false
      compiler: gcc

    # GCC 6
    - os: linux
      env: COMPILER=g++-6 COMPUTE_COVERAGE=true
      compiler: gcc
      
    # Clang 3.6
    - os: linux
      env: COMPILER=clang++-3.6 CCOMPILER=clang-3.6 COMPUTE_COVERAGE=false
      compiler: clang
      
    # Clang 3.7
    - os: linux
      env: COMPILER=clang++-3.7 CCOMPILER=clang-3.7 COMPUTE_COVERAGE=false
      compiler: clang
      
    # Clang 3.8
    - os: linux
      env: COMPILER=clang++-3.8 CCOMPILER=clang-3.8 COMPUTE_COVERAGE=false
      compiler: clang
     
install:
  ############################################################################
  # Override compiler if needed
  ############################################################################
  - if [[ "${COMPILER}" != "" ]]; then export CXX=${COMPILER}; export CC=${CCOMPILER}; fi
  - |
    if [[ "${COMPUTE_COVERATE}" == "true" ]]; then
      sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-6 50
    fi
  
    ############################################################################
  # Install a recent CMake (unless already installed on OS X)
  ############################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="http://www.cmake.org/files/v3.5/cmake-3.5.2.tar.gz"
      travis_retry wget --no-check-certificate --quiet ${CMAKE_URL}
      tar xf cmake-3.5.2.tar.gz
      cd cmake-3.5.2 && ./configure && make && sudo make install
    else
      if ! brew ls --version cmake &>/dev/null; then brew install cmake; fi
    fi
  - |
    if [[ "${COMPUTE_COVERAGE}" == "true" ]]; then
      sudo apt-add-repository "deb http://archive.ubuntu.com/ubuntu/ trusty main restricted" -y
      sudo apt-get update -qq
      wget http://ftp.de.debian.org/debian/pool/main/l/lcov/lcov_1.11.orig.tar.gz
      tar xf lcov_1.11.orig.tar.gz
      sudo make -C lcov-1.11/ install
      # install lcov to coveralls conversion + upload tool
      gem install coveralls-lcov
    fi
  - |
    git clone https://github.com/google/googletest.git
    cd googletest && mkdir build && cd build && cmake .. && make
    sudo cp -r ../googletest/include/gtest /usr/local/include/
    sudo cp googlemock/gtest/lib*.a /usr/local/lib

script:
  - cd $TRAVIS_BUILD_DIR
  - mkdir build && cd build
  - |
    if [[ "${COMPUTE_COVERAGE}" == "true" ]]; then
      cmake -DBuildTest=ON -DCoverage=ON .. && make
      lcov --capture --initial --no-external --directory . --base-directory ../Spacy --output-file initial.info --rc lcov_branch_coverage=1
    else
      cmake -DBuildTest=ON .. && make
    fi
  - Test/unit_tests
  - |
    if [[ "${COMPUTE_COVERAGE}" == "true" ]]; then
      lcov --capture --no-external --directory . --base-directory ../Spacy --output-file final.info --rc lcov_branch_coverage=1
      lcov --add-tracefile initial.info --add-tracefile final.info --output-file coverage.info --rc lcov_branch_coverage=1
    fi
  - cd ..
after_success:
  - |
    if [[ ${COMPUTE_COVERAGE}" == "true" ]]; then
      cd build
      sed 's@/home/travis/build/spacy-dev/Spacy/@/@g' coverage.info
      coveralls-lcov --repo-token XQlVreS1r1o5V7qn14UiqF3W3kZiy7TUM coverage.info
    fi
