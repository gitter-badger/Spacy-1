if(Dolfin)
  # Tell cmake where to find DOLFINConfig.cmake
  set(DOLFIN_DIR /home/lars/.hashdist/bld/dolfin/6qf3p654zczj/share/dolfin/cmake)
  find_package(DOLFIN)
  if(DOLFIN_FOUND)
    include_directories(${DOLFIN_INCLUDE_DIRS})
    include_directories(SYSTEM ${DOLFIN_3RD_PARTY_INCLUDE_DIRS})
    aux_source_directory(Adapter/FEniCS SRC_LIST)
  endif()
endif()
find_package(Eigen3)
if(EIGEN3_FOUND)
  include_directories(${EIGEN3_INCLUDE_DIR})
  aux_source_directory(Adapter/Eigen SRC_LIST)
endif()

#add_subdirectory(Adapter)
aux_source_directory(. SRC_LIST)
aux_source_directory(Adapter/Scalar SRC_LIST)
aux_source_directory(Adapter/Generic SRC_LIST)
aux_source_directory(Algorithm SRC_LIST)
aux_source_directory(Algorithm/Scalar SRC_LIST)
aux_source_directory(Algorithm/CG SRC_LIST)
aux_source_directory(Algorithm/CompositeStep SRC_LIST)
aux_source_directory(Algorithm/Newton SRC_LIST)
aux_source_directory(Algorithm/Rothe SRC_LIST)
aux_source_directory(Spaces/RealSpace SRC_LIST)
aux_source_directory(Spaces/ProductSpace SRC_LIST)
aux_source_directory(Util SRC_LIST)
aux_source_directory(Util/Base SRC_LIST)
aux_source_directory(Util/Mixins SRC_LIST)
aux_source_directory(Util/Exceptions SRC_LIST)

file(GLOB_RECURSE HEADERS RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} *.hh)

foreach(HEADER ${HEADERS})
  string(REGEX MATCH "(.*)[/\\]" DIR ${HEADER})
  install(FILES ${HEADER} DESTINATION include/Spacy/${DIR})
endforeach(HEADER HEADERS)

add_library(spacy ${SRC_LIST})

install (TARGETS spacy DESTINATION lib/Spacy)
