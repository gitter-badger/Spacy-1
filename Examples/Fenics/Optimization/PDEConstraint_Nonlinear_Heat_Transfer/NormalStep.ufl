# Copyright (C) 2005 Garth N. Wells
#
# This file is part of DOLFIN.
#
# DOLFIN is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# DOLFIN is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with DOLFIN. If not, see <http://www.gnu.org/licenses/>.
#
# Modified by Harish Narayanan 2009
# Modified by Anders Logg 2011
#
# The residal form F and the Jacobian (linearised) form J
# for the nonlinear equation - div (1+u^2) grad u = f
#
# Compile this form with FFC: ffc -l dolfin NonlinearPoisson.ufl

Y = FiniteElement("Lagrange", triangle, 1)
U = FiniteElement("Lagrange", triangle, 1)
P = FiniteElement("Lagrange", triangle, 1)

X = MixedElement( Y , U , P )

x = Coefficient(X)
(y,u,p) = split(x)

alpha = Constant(triangle)
c = Constant(triangle)
d = Constant(triangle)

(vy,vu,vp) = TestFunctions(X)
(wy,wu,wp) = TrialFunctions(X)

H = (c+d*y**2)*inner(grad(vy),grad(wy))*dx + vy*wy*dx + alpha*vu*wu*dx - vu*wp*dx - vp*wu*dx + 1e9*vy*wp*ds + 1e9*vp*wy*ds + inner((c+d*y**2)*grad(vy),grad(wp))*dx + inner((c+d*y**2)*grad(vp),grad(wy))*dx + inner((2*d*y*vy)*grad(y),grad(wp))*dx + inner((2*d*y*wy)*grad(y),grad(vp))*dx

forms = [H]

